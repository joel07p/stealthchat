# ./.github/workflows/build.yml

name: build

on:
  # support calling this workflow from other workflows
  # https://docs.github.com/en/actions/learn-github-actions/reusing-workflows#creating-a-reusable-workflow
  workflow_call:
  # support running this workflow on push events
  # https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
  push:
    branches-ignore: [dev, joelp, tobiasm]

jobs:
  build:
    # https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idsteps
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        # 2.4.0 was the latest at the time of writing
        uses: actions/checkout@v4.1.1
    
      # a standard step for GitHub actions on Node
      # https://github.com/actions/setup-node
      - name: Set up node env
        # 2.5.1 was the latest at the time of writing
        uses: actions/setup-node@v4.0.2
        with:
          # specify the version appropriate to your project
          # setup-node can also read the version from a Node version file. see the setup-node docs for details
          node-version: 18
          # cache installed dependencies for best performance. yarn and pnpm are also supported  
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies for backend
        # For Node 16: https://docs.npmjs.com/cli/v8/commands/npm-ci
        # for other Node versions, look up the npm version at https://nodejs.org/en/download/releases/
        working-directory: backend
        run: npm i
        
      - name: Install dependencies for frontend
        working-directory: frontend
        run: npm i
        
      # lint steps, test steps, etc go here. adapt to your needs
        
      - name: change rights
        run: |
            sudo find . -path ./node_modules -prune -o -type f -print -exec chmod 644 {} \;
            sudo find . -path ./node_modules -prune -o -type d -print -exec chmod 755 {} \;
            sudo chmod -R 777 frontend/

     

      # upload the artifact for use in either CD
      # here, the 'dist' directory is compressed and uploaded to GitHub asset storage as 'build-artifact'
      - name: Upload backend artifact
        # https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          # the name to save the compressed asset as
          name: build-artifact-backend
          # the directory or file to upload. adapt to your needs
          path: backend/dist
          # the artifact is only needed for the duration of the build-deploy workflow
          # adapt to your needs
          # https://github.com/actions/upload-artifact#retention-period
          retention-days: 1
          
      - name: Upload frontend artifact
        # https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          # the name to save the compressed asset as
          name: build-artifact-frontend
          # the directory or file to upload. adapt to your needs
          path: frontend/dist
          # the artifact is only needed for the duration of the build-deploy workflow
          # adapt to your needs
          # https://github.com/actions/upload-artifact#retention-period
          retention-days: 1
